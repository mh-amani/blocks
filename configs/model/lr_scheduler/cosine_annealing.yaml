_target_: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts
T_0: 10
T_mult: 1
eta_min: 0

#     scheduler:  # the schedule instance defined above â€“ will be passed from the code (in configure_optimizer)
interval: "epoch" # The unit of the scheduler's step size. 'step' or 'epoch
frequency: 1 # corresponds to updating the learning rate after every `frequency` epoch/step
monitor: train/loss # Used by a LearningRateMonitor callback when ReduceLROnPlateau is used 
# (train/z_supervision_loss, train/total_loss, val/z_supervision_loss, val/total_loss)

model_x_to_z_scheduler:
  _target_: ${model.lr_scheduler._target_}
  T_0: ${model.lr_scheduler.T_0}
  T_mult: ${model.lr_scheduler.T_mult}
  eta_min: ${model.lr_scheduler.eta_min}


model_x_to_z_scheduler_dict:
  interval: ${model.lr_scheduler.interval}
  # frequency: ${model.lr_scheduler.frequency}
  # monitor: ${model.lr_scheduler.monitor}
  name: LearningRateScheduler_${model.lr_scheduler.model_x_to_z_scheduler._target_}

model_z_to_x_scheduler:
  _target_: ${model.lr_scheduler._target_}
  T_0: ${model.lr_scheduler.T_0}
  T_mult: ${model.lr_scheduler.T_mult}
  eta_min: ${model.lr_scheduler.eta_min}


model_z_to_x_scheduler_dict:
  interval: ${model.lr_scheduler.interval}
  # frequency: ${model.lr_scheduler.frequency}
  # monitor: ${model.lr_scheduler.monitor}
  name: LearningRateScheduler_${model.lr_scheduler.model_z_to_x_scheduler._target_}

disc_x_scheduler:
  _target_: ${model.lr_scheduler._target_}
  T_0: ${model.lr_scheduler.T_0}
  T_mult: ${model.lr_scheduler.T_mult}
  eta_min: ${model.lr_scheduler.eta_min}


disc_x_scheduler_dict:
  interval: ${model.lr_scheduler.interval}
  # frequency: ${model.lr_scheduler.frequency}
  # monitor: ${model.lr_scheduler.monitor}
  name: LearningRateScheduler_${model.lr_scheduler.disc_x_scheduler._target_}

disc_z_scheduler:
  _target_: ${model.lr_scheduler._target_}
  T_0: ${model.lr_scheduler.T_0}
  T_mult: ${model.lr_scheduler.T_mult}
  eta_min: ${model.lr_scheduler.eta_min}
  

disc_z_scheduler_dict:
  interval: ${model.lr_scheduler.interval}
  # frequency: ${model.lr_scheduler.frequency}
  # monitor: ${model.lr_scheduler.monitor}
  name: LearningRateScheduler_${model.lr_scheduler.disc_z_scheduler._target_}